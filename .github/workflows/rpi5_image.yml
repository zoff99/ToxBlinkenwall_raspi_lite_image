name: Nightly RPI5

on:
  push:
    paths-ignore:
     - 'README.md'
  #schedule:
  #  - cron:  '0 0 * * *'
  workflow_dispatch:
    inputs:
      version:
        description: dummy
        default: dummy

defaults:
  run:
    shell: bash

jobs:
  build_rpi5:
    runs-on: ubuntu-22.04

    steps:
      - uses: actions/checkout@v3
      - run: apt --version

      - run: ls -al /etc/apt/sources.list.d/
      - run: sudo apt update &&
          sudo apt install -y --no-install-recommends apt apt-transport-https
      - run: apt --version
      - run: sudo apt update &&
          sudo DEBIAN_FRONTEND=noninteractive apt install -y --no-install-recommends
            binfmt-support quilt qemu-user-static
            debootstrap zip libarchive-tools
            qemu-utils pigz

      - run: sudo modprobe nbd
      - run: sudo modprobe binfmt_misc
      - run: sudo update-binfmts --enable

      - run: git clone https://github.com/RPi-Distro/pi-gen ; cd pi-gen ; git checkout "2023-12-05-raspios-bookworm-arm64"
      - run: pwd; ls -al; id -a
      # add ToxBlinkenwall custom build stuff ----------
      - run: cd ./stage2 ; find . -name '*.sh' -exec chmod a+x {} \;
      - run: cd ./stage2 ; ls -alR
      - run: cp -av ./stage2 pi-gen/
      # give name of CI vars to docker
      - run: echo "$GITHUB_ACTOR" > ./pi-gen/stage3/_GIT_PROJECT_USERNAME_
      - run: echo "$GITHUB_ACTOR"; cat ./pi-gen/stage3/_GIT_PROJECT_USERNAME_
      - run: echo "$GITHUB_REPOSITORY" > ./pi-gen/stage3/_GIT_PROJECT_REPONAME_
      - run: echo "$GITHUB_REPOSITORY"; cat ./pi-gen/stage3/_GIT_PROJECT_REPONAME_
      - run: echo "$GITHUB_REF_NAME" > ./pi-gen/stage3/_GIT_BRANCH_
      - run: echo "$GITHUB_REF_NAME"; cat ./pi-gen/stage3/_GIT_BRANCH_
      # change debootstrap to give more output, so CI wont kill our job because of no output for a long time
      - run: sed -i -e 'sxdebootstrap xdebootstrap --verbose x' ./pi-gen/stage0/prerun.sh
      - run: cat ./pi-gen/stage0/prerun.sh
      # add ToxBlinkenwall custom build stuff ----------
      - run: cd pi-gen;echo "IMG_NAME='Raspbian'" > config
      - run: cd pi-gen;echo "DISABLE_FIRST_BOOT_USER_RENAME='1'" >> config
      - run: cd pi-gen;echo "FIRST_USER_PASS='984a755nb7349r857348t9573495'" >> config

      - run: cd pi-gen;touch ./stage3/SKIP ./stage4/SKIP ./stage5/SKIP
      - run: cd pi-gen;touch ./stage4/SKIP_IMAGES ./stage5/SKIP_IMAGES
      - run: cd pi-gen;sudo ./build.sh
      - run: cd pi-gen; ls -hal deploy/
      - run: cd pi-gen; mkdir -p deploy2/

      - run: cd pi-gen; find -name "*Raspbian-lite.zip" || echo "no error"
      - run: cd pi-gen; find -name "\*Raspbian-lite.zip" || echo "no error"
      - run: cd pi-gen; cp -av deploy/image_*-Raspbian-lite.zip deploy2/image-Raspbian-lite.zip
      - run: cd pi-gen; ls -hal deploy2/

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.3.1
        with:
          name: raspi_sdcard_image
          path: |
            pi-gen/deploy2/*


